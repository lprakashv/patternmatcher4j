name: PatternMatcher4J Workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-test-coverageReport:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Run build+tests and update env for badge
        run: |
          # ....
          # BUILD SUCCESSFUL in 20s
          # 9 actionable tasks: 9 executed
          TEST_OUTPUT="$(./gradlew build test)"
          echo "TEST_OUTPUT:"
          echo "$TEST_OUTPUT"
          SUMMARY=$(echo "$TEST_OUTPUT" | tail -2 | head -1)
          echo "SUMMARY:"
          echo "$SUMMARY"
          TEST_RESULT=$(echo "$SUMMARY" | cut -d " " -f 2)
          echo "REST_RESULT:"
          echo "$TEST_RESULT"
          echo "TEST_RESULT=$(echo ${TEST_RESULT})" >> $GITHUB_ENV
      - name: Generate coverage report and get badge
        run: |
          # ....
          COVERAGE_OUTPUT="$(./gradlew test jacocoLogTestCoverage)"
          echo "COVERAGE_OUTPUT:"
          echo "$COVERAGE_OUTPUT"
          
          LINE_COVERAGE=$(echo "$COVERAGE_OUTPUT" | grep -A4 "Test Coverage" | tail -1 | cut -d ":" -f 2)
          echo "LINE_COVERAGE:"
          echo "$LINE_COVERAGE"
          echo "LINE_COVERAGE=$(echo ${LINE_COVERAGE})" >> $GITHUB_ENV
          
          BRANCH_COVERAGE=$(echo "$COVERAGE_OUTPUT" | grep -A3 "Test Coverage" | tail -1 | cut -d ":" -f 2)
          echo "BRANCH_COVERAGE:"
          echo "$BRANCH_COVERAGE"
          echo "BRANCH_COVERAGE=$(echo ${BRANCH_COVERAGE})" >> $GITHUB_ENV
          
          LINE_COVERAGE=$(echo "$COVERAGE_OUTPUT" | grep -A2 "Test Coverage" | tail -1 | cut -d ":" -f 2)
          echo "METHOD_COVERAGE:"
          echo "$METHOD_COVERAGE"
          echo "METHOD_COVERAGE=$(echo ${METHOD_COVERAGE})" >> $GITHUB_ENV
          
          # var REF = 'refs/pull/27/merge.json';
          REF=${{ github.ref }}
          # console.log('github.ref: ' + REF);
          echo "github.ref: $REF"
          # var PATHS = REF.split('/');
          IFS='/' read -ra PATHS <<< "$REF"
          # var BRANCH_NAME = PATHS[1] + '_' + PATHS[2];
          BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
          # console.log(BRANCH_NAME); // 'pull_27'
          echo $BRANCH_NAME
          # process.env.BRANCH = 'pull_27';
          echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
      - name: Create Build and Tests Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: d79f9f3049bf190b417943a2d3b21481
          filename: patternmatcher4j__${{ env.BRANCH }}.json
          label: Build and Tests
          message: ${{ env.TEST_RESULT }}
          color: green
          namedLogo: gradle
      - name: Create Line Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 2f297a650e2c9fea0b3b817691fada74
          filename: patternmatcher4j__${{ env.BRANCH }}_lc.json
          label: Line Coverage
          message: ${{ env.LINE_COVERAGE }}
          color: green
          namedLogo: gradle
      - name: Create Branch Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 2f297a650e2c9fea0b3b817691fada74
          filename: patternmatcher4j__${{ env.BRANCH }}_bc.json
          label: Branch Coverage
          message: ${{ env.BRANCH_COVERAGE }}
          color: green
          namedLogo: gradle
      - name: Create Method Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 2f297a650e2c9fea0b3b817691fada74
          filename: patternmatcher4j__${{ env.BRANCH }}_mc.json
          label: Method Coverage
          message: ${{ env.METHOD_COVERAGE }}
          color: green
          namedLogo: gradle
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build and Test
        run: ./gradlew build test
      - name: Publish to Sonatype
        run: ./gradlew publish -PossrhUser="${{ env.OSSRH_USER }}" -PossrhPassword="${{ env.OSSRH_PASS }}" -Psigning.keyId="${{ env.SIGNING_KEY_ID }}" -Psigning.password="${{ env.SIGNING_PASS }}" -Psigning.secretKeyRingFile=".github/seckeyring.gpg" --stacktrace
