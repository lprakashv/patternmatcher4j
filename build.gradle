plugins {
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id 'jacoco'
    id "io.freefair.lombok" version "6.0.0-m2"
    id 'org.barfuin.gradle.jacocolog' version '2.0.0'
}

group 'io.github.lprakashv'
version '0.2.0'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'patternmatcher4j'
            from components.java
            pom {
                name = 'patternmatcher4j'
                description = 'A Functional programming style pattern matcher library for Java'
                url = 'http://lprakashv.github.io/patternmatcher4j/'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'lprakashv'
                        name = 'Lalit Vatsal'
                        email = 'lprakashv@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/lprakashv/patternmatcher4j'
                    connection = 'scm:git:https://www.github.com/lprakashv/patternmatcher4j.git'
                    developerConnection = 'scm:git:ssh://git@github.com:lprakashv/patternmatcher4j.git'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username project.hasProperty('ossrhUser') ? project.ossrhUser : null
                password project.hasProperty('ossrhPassword') ? project.ossrhPassword : null
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

task withCopyJavadocToDocs(type: Copy) {
    from('build/docs/javadoc') {
        include '**/*.html'
        include '**/*.css'
        include '**/*.js'
    }
    into 'docs/'
}

build.finalizedBy(withCopyJavadocToDocs)

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}
